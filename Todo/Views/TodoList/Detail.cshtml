@using Microsoft.AspNetCore.Identity
@using Todo.Controllers
@using Todo.Data.Entities
@using Todo.Services
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@inject UserManager<IdentityUser> UserManager
@inject IGravatar gravatar

@{
    ViewData["Title"] = $"List: {Model.Title}";
    var identityUser = await UserManager.GetUserAsync(User);
    var emailAddress = await UserManager.GetEmailAsync(identityUser);
    var gravatarhash = gravatar.GetHash(emailAddress);
    var htmlContent = await gravatar.GenerateUserHtmlAsync(emailAddress);
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">

    <ul class="list-group">

        <li class="list-group-item">
            <a asp-action="Create" asp-controller="TodoItem" asp-route-todoListId="@Model.TodoListId">
                <strong>Add New Item</strong>
            </a>
        </li>

        <li class="list-group-item">
            <div class="row">
                <div class="col-md-8">
                    <input type="checkbox" id="hidedoneitems" />
                    <i style="font-size: small;">Hide done items</i>
                </div>
                <div class="col-md-4 text-right">
                    <form method="get" asp-action="Detail" asp-controller="TodoList">
                        @Html.HiddenFor(x => x.TodoListId)
                        Sort by: <br />
                        <label>
                            <i style="font-size: x-small;">Importance</i>
                            @Html.RadioButtonFor(x => x.SortedByRank, false, new { onchange = "this.form.submit()" })
                        </label>
                        <br />

                        <label>
                            <i style="font-size: x-small;">Rank</i>
                            @Html.RadioButtonFor(x => x.SortedByRank, true, new { onchange = "this.form.submit()" })
                        </label>
                        <br />
                    </form>
                </div>
            </div>
        </li>

        <li class="list-group-item">
            <div class="row">
                <div class="col-md-6">
                    <h7>Task Name</h7>
                </div>
                <div class="col-md-3 text-right">
                    <h7>Assignee</h7>
                </div>
                <div class="col-md-3 text-right">
                    <h7>Rank</h7>
                </div>
            </div>
        </li>

        @foreach (var item in Model.Items)
        {
            string contextualClass;
            var taskStatus = item.IsDone ? "done" : "in-progress";

            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Medium:
                    contextualClass = "list-group-item-warning";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }

            <li class="list-group-item @contextualClass" name=@taskStatus>
                
                <div class="row">

                    <div class="col-md-6">
                        <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                            @if (item.IsDone)
                            {
                                <s>@item.Title</s>
                            }
                            else
                            {
                                <text>@item.Title</text>
                            }
                        </a>
                    </div>

                    <div class="col-md-3 text-right">
                        <small>
                            @if (htmlContent != "" && item.ResponsibleParty.Email == emailAddress)
                            {
                                @Html.Raw(htmlContent)
                            }
                            else
                            {
                                <img src="https://www.gravatar.com/avatar/@gravatarhash?s=30" />
                                @item.ResponsibleParty.UserName
                            }
                        </small>
                    </div>

                    <div class="col-md-3 text-right">
                        <span>
                            @item.Rank
                        </span>
                    </div>
                </div>

            </li>
        }
    </ul>
</div>

@section Scripts {
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const checkbox = document.getElementById('hidedoneitems');
        const items = document.querySelectorAll('.list-group [name="done"]');

        checkbox.addEventListener('change', (event) => {
            const displayStyle = event.target.checked ? 'none' : 'block';
            items.forEach(item => {
                item.style.display = displayStyle;
            });
        });
    });
</script>
}
